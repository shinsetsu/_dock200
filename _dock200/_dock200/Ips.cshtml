@model IEnumerable<_dock200.Models.shinIps2>
@using _dock200.Models
@using System.Reflection

@{

    Layout = "~/z____SM________Index.cshtml";
}

<style>
    main {
        width: 90vw;
        margin: auto;
        color: white;
        background-color: rgba(0, 0, 0, 0.58);
        padding-top: 2vh;
    }

    flex, flexT, flexR {
        width: auto;
        height: auto;
        display: flex;
        justify-content: space-between;
        outline: .5px solid red;
        font-size: 13px;
    }

    flexT {
        width: 100%;
        height: auto;
        margin: auto;
        background-color: black;
        outline: 1px solid orange;
        padding: .5% 1%;
    }

        flexT a {
            display: block;
            color: white;
            border-bottom: 1px solid blue;
            width: 100%;
        }

    flexR {
        width: auto;
    }

        flexR div {
            outline: 1px solid yellow;
            width: auto;
            padding: 5px 10px;
            margin: 2px 2px;
        }

    Tooling {
        outline: 1px solid navy;
        background: rgba(0, 0, 0, 0.42);
        margin: 4px 4px;
        width: auto;
        height: auto;
        margin: 6% 2%;
        margin-top: 2%;
        margin-bottom: 4%;
        border-radius: 3px;
        font-weight: 100;
    }

        Tooling h1 {
            margin-top: 0;
            padding-top: 1%;
            padding-right: 2%;
            padding-left: 2%;
            width: 100%;
            background-color: gray;
            color: white;
            font-size: small;
            font-weight: 100;
        }

        Tooling r {
            display: flex;
            justify-content: space-between;
            width: 100%;
            background-color: rgba(255, 255, 255, 0.18);
            padding: .5% 1%;
            padding-bottom: 0;
        }

            Tooling r:nth-of-type(2n) {
                background-color: rgba(0, 0, 0, 0.22);
            }

    crud {
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: flex-end;
        outline: 1px solid #00539c;
        margin: 2px 2px;
    }

        crud > * {
            width: auto;
            padding: 0 2%;
            outline: 1px solid #00ffa1;
        }

    o {
        padding: .1% .2%;
    }

        o b {
            background: green;
            height: 80%;
            width: auto;
            color: rgba(0,0,0,0);
        }

    r o {
        font-size: small;
        color: #bcbcbc;
    }

    sm {
        font-size: 10px;
        color: #8e8e8e;
    }

    .obj {
        background: rgba(255, 255, 255, 0.10);
        color: black;
        height: 100%;
        width: 100%;
        padding: 1% 5%;
        outline: 1px solid blue;
    }


    h1 {
        color: white;
    }
</style>


<flexT>
    <div>
        <h1>    CMDB    </h1>
        <h2>Write the Reflections Code ..</h2>
    </div>
    <flexR>
        <div>
            <h3>  CMDB Documents  </h3>
            <a style="color: #656565;" href="https://en.wikipedia.org/wiki/Configuration_management_database">
                CMDB Definition / Parts
            </a>
            <a href="https://stackoverflow.com/questions/24041062/know-when-to-retry-or-fail-when-calling-sql-server-from-c">
                DatabaseRetries
            </a>
        </div>
        <div>
            Company Resources
            <a> Resources</a>
        </div>
    </flexR>
</flexT>


<style>
    .dbList {
        width: 50%;
    }
</style>
<flex style="flex-direction:column; float:right;">  <h1>    TestScenarios</h1>
    <r> ob.Test_■</r>
    <r> ob.Test_■</r>
    
    
    </flex>
<flex class="dbList">
    <div>
        <h1>    dbList</h1>
        <ul>
            <li>    dbType  dbIp  dbConnectionStr  dbOwner  dbCall</li>
            <li>    ______  ____  _______________  _______  ______</li>

        </ul>
    </div>
    <Tooling>
        <r> <sm> List </sm>Package Documentation (Export) <o> <a> .docx   .pdf    .html   .xlsx   .xls    .txt    .csv    .googleDoc  .jpg .png    </a></o> </r>
        <h1> DB : Tooling </h1>

    </Tooling>
</flex>

<style>
    .objList {
        width: 50%;
    }
</style>
<flex class="objList">
    <div>
        <h1>objList</h1>
        <ul>
            <li>    ___ </li>
            <li>    ___ </li>
            <li>    ___ </li>
        </ul>
    </div>
    <Tooling>
        <r> <sm> List </sm>Package Documentation (Export) <o> <a> .docx   .pdf    .html   .xlsx   .xls    .txt    .csv    .googleDoc  .jpg .png    </a></o> </r>
        <h1> ObjectTooling </h1>

        <crud>  <c>  Create</c> <rd> Redefine</rd>      <e>  Edit</e>      <d>  Delete</d></crud>
        <hr />
        <r>
            UpdateList
            <o>    Manual</o>   <o>     Auto</o>
        </r>
        <hr />
        <r>
            Export Data Structure (Define Exportees)
            <o>   asIs</o> <o>   singleTeir<o />
        </r>
        <r>
            <sm>ob : </sm>Package Documentation (Export)
            <o style="outline:1px solid yellow;text-align:right;"> <o> .docx   .pdf    .html   .xlsx   .xls    .txt    .csv    .googleDoc  .jpg .png    </o></o>
        </r>
        <r>  Mirror Database    (Define Mirroring) </r>
        <r>  Migrate newStrucure    <sm>(DB Tables - Data)   (Define Migrate)</sm>   </r>
        <r>  Migrate sameStructure  <sm>(Mirror&Migrate)     (Define Migrate)</sm>    </r>
        <r>  </r>

    </Tooling>
</flex>

<flex class="changeHistory">
    <div>
        <h1>    changeHistory   </h1>
        <ul>
            <li>    ___ </li>
            <li>    ___ </li>
            <li>    ___ </li>
        </ul>
    </div>
</flex>

<flex class="changeTickets">
    <div>
        <h1>    changeTickets   </h1>
        <ul>
            <li>    ___ </li>
            <li>    ___ </li>
            <li>    ___ </li>
        </ul>
    </div>
</flex>



<flex style="flex-direction:column; float:right;width:28%">
    <img style="float:right;width:100%;height:auto" src="~/RF_CDM.gif" />
    <img style="float:right;width:100%;height:auto" src="~/flowMap.png" />
</flex>
@*@Html.DisplayNameFor(model => model.IP)
    @Html.DisplayNameFor(model => model.longitude)*@


@*@foreach (PropertyInfo prop in typeof(shinIps2).GetProperties()){

    prop.Name.ToString();
        }*@

<div class="obj">
    <flex style="width:100%; background-color:black;">     <h1>    Objects </h1> </flex>


    <h2>    ShinIp2 </h2>
    @{ var t = typeof(shinIps2);
        <h3>    Methods </h3>
        foreach (var meth in t.GetMethods())
        {
            if (!(@meth.Name.Contains("set") || meth.Name.Contains("get")))
            { <flex>  <o> <b>■</b> Method: </o>  <o>@meth.Name </o> </flex> }
    }

    <h3>Constructors</h3>
    foreach (var con in t.GetConstructors())
    { <flex>
            @con
        </flex>}      //foreach (var propValue in t.GetProperty(prop).GetValue()



    <h3>    Properties  </h3>
    foreach (var prop in t.GetProperties())
    { <flex>
            <sm>@prop.PropertyType</sm>
            @prop.Name
        </flex>}      //foreach (var propValue in t.GetProperty(prop).GetValue()



    <h3>    Owner Details   </h3>

    @*

        <h2>    Fields  </h2>
        foreach (var fields in t.GetFields())
        { <div> @fields.Name </div> }

        foreach (var e in t.GetEnumNames())
        { <div>   @e     </div> }

    *@
    }



    @*@{
          foreach (var prop in typeof(Model[).GetRuntimeProperties() {


              @prop.Name.ToString();
          }~

        }*@


</div>
