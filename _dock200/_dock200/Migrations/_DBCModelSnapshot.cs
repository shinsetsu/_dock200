// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _dock200.Data;

namespace _dock200.Migrations
{
    [DbContext(typeof(_DBC))]
    partial class _DBCModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_dock200.Models.shinIps2", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimesSeen")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("shinIps2");
                });

            modelBuilder.Entity("_dock200.Models.shinSiteMetrics", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("pageViewsDebug")
                        .HasColumnType("int");

                    b.Property<int>("pageViewsEx")
                        .HasColumnType("int");

                    b.Property<int>("pageViewsRelease")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("shinSiteMetrics");
                });

            modelBuilder.Entity("_dock200.Models.shinUserSessionSettings", b =>
                {
                    b.Property<string>("io")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("DarkStyle")
                        .HasColumnType("bit");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("expirationTime")
                        .HasColumnType("datetime2");

                    b.HasKey("io");

                    b.ToTable("shinUserSessionSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
